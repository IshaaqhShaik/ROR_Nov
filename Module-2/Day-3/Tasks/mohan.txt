Operator:
	An operator is a symbol that represents an operation to be performed with one or more 
    operand.
Types of operators:
Arithmetic Operators:
	These are used to perform arithmetic/mathematical operations on operands. 
Addition(+): This operator is used to add two operands. 
	Ex: x+y
Subtraction(-): This operator is used to subtract two operands. 
	Ex: x-y.
Multiplication(*): This operator is used to multiply two operands. 
	Ex: x*y.
Division(/): This operator is used to divide the first operand by the second. 
	Ex: x/y.
Modulus(%): This operator is used to returns the remainder when first operand is divided by the second. 
	Ex: x%y.
Comparison Operators:
	Comparison operators or Relational operators are used for comparison of two values.
Types of Comparison Operators: 
Equal To(==): This operator is used to check whether the two given operands are equal or 
            not. If so, it returns true. Otherwise it returns false. 
	Ex: 5==5 => true
	    4==7 => false
Not Equal To(!=): This operator is used to check whether the two given operands are equal 
            or not. If not, it returns true. Otherwise it returns false.  
	Ex: 5!=5 => false
	    3!=4 => true
Greater Than(>): This operator is used to check whether the first operand is greater than 
            the second operand. If so, it returns true. Otherwise it returns false. 
	Ex: 6>5 => true
	    4>8 => false
Less than(<): This operator is used to check whether the first operand is lesser than the 
            second operand. If so, it returns true. Otherwise it returns false. 
	Ex: 6<5 => false
	    1<3 => true
Greater Than Equal To(>=): This operator is used to check whether the first operand is 
            greater than or equal to the second operand. If so, it returns true. Otherwise 
            it returns false. 
	Ex: 5>=5 => true
	    4>=6 => false
Less Than Equal To(<=): This operator is used to check whether the first operand is lesser 
            than or equal to the second operand. If so, it returns true. Otherwise it 
            returns false. 
	Ex: 5<=5 => true
	    3<=1 => false
Logical Operators:
	They are used to combine two or more conditions/constraints or to complement the 
    evaluation of the original condition in consideration.
Types of logical Operators:
 
AND(&&): This operator is used to return true when both the conditions are satisfied. 
        Otherwise it returns false.  
	Ex: a && b => true when both a and b are true
	    a && b => false when either a and b are false.	
OR(||): This operator is used to return true when one (or both) of the conditions is 
        satisfied. Otherwise it returns false. 
	Ex: a || b => true if one of a or b is true 
	    a || b => true if both are true
	    a || b => false if both are false
NOT(!): This operator is used to return true the condition is not satisfied. Otherwise 
        it returns false. 
	Ex: !true => false