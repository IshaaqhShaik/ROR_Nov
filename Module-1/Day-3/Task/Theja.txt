What is git
Git is a DevOps tool used for source code management.It is a free open source version control system(VCS)used to handle small to very large projects efficiently.
Git is used to tracking  changes in the source code enabling multiple developers to work together on linear development.
 
 Source code management(SCM)
It is the process of tracking and managing changes to a software's source code .It is also known as version control.It is used to track modifications to a source code repositery.

Git lifecycle
Step-1
You clone the Git repositery as a working copy using
  git clone(url name)

Step-2
You modify the working copy by editing/adding/moving files.And track the files using 
  git add file name
If you need the other developers changes you also update the working repositery.

 Step-3
 Review the changes and update the latest snapshot of file in working repositery to commit changes using
  git commit -m "updated file name"

Step-4
You commit changes if everything is fine ,then push the changes to the repositery using
  git push


Each file in your working repositery it can be one of two states
Tracked and Untracked
Tracked files are updated by latest snapshot as well as newly staged files ,they can be unmodified and staged,if you edit the file it can be modified using
  git add file name

Untracked files are in your working repositery that were not in your last snapshot and are not in your staged files
When you clone a repositery all of your files will be tracked and unmodified,since you are editing the files

Git status
Main tool you use to determine which files are in which state is using
  git status
Ex: git status
 on your branch master
your branch is up to date with "origin/master"

Git add
In order to begin tracking a new file using
  git add filename

Git commit
It is used update the latest snapshot of the staged file to commit using
  git commit -m "updated file name"

Git remove
If you remove the file from your working repositery using
  git rm file name

3-Stage architecture
->Working directory
->Staging area
->Git repositery

Working directory
 Specifies the file explores folder where your files are stored
  
Staging area
 Ii is a area where the files are present which you want to send to commit to updated latest snapshot of files

Git repositery
 After commit files, which are in staging area will move to Git repositery.

Remote repositery
 These are hosted on a server that is accessible for all team members

Local repositery
 These are the computers of the team members,The entire work of Git is based on this repositery

Branches
 If you don't create a branchs you may face more issues and problems
 The problems are 
1.SImultaneaus problems
2.Overwriting problems
3.Conflicting problems
4.Manual conflict resolution

Branches are important
and why 
1.Isolation
2.Parallel development
3.version control
4.Testing and experiment
5.Collaboration

Command using branches creating
->git branch
It lists all the branches in the repositery

->git checkout .
 it reverts modifications to files and brings the working directory back to the state of the last commit.
The dot(.)refers to the current directory

->git checkout branch name
This command is used to switch to an existing branch is in the repositery.It allows you to work on the code contained within that specific branch

->git checkout -b branch name
This command is used to create new branch

Types of branches
1.Feature branch
2.Release branch
3.Hotfix

Feature branch
Is a software development technique used to work on new features and changes to working repositery without effecting to master repositery.

Release branch
Is a once the work has complete to the feature branch and developer branch to test the code and push to the code to main(master)repositery.

Hot fix 
It is important and it is resolved urjently.It means it's appeared in unexpected errers.If its not resolved urjently the whole website will be in danger.